‚úÖ Mini-desafio 3 ‚Äì Par ou √çmpar
Crie um script chamado par_ou_impar.php que:
Tenha uma vari√°vel chamada $numero, com um valor num√©rico qualquer.
Verifique se esse n√∫mero √© par ou √≠mpar.
Exiba a mensagem:
"O n√∫mero X √© par" ou
"O n√∫mero X √© √≠mpar"
üß† Dica: use o operador % (m√≥dulo) pra verificar se sobra resto da divis√£o por 2.

Code:
<?php
$numero = 5;
$resultado = $numero % 2;

if ($resultado == 0){
	echo "O n√∫mero $numero, √© par\n";
} else {
	echo "O n√∫mero $numero, √© √≠mpar\n";
}
?>

Sa√≠da:
O n√∫mero 5, √© √≠mpar


‚úÖ Mini-desafio 4 ‚Äì Maior n√∫mero
Crie um script chamado maior_numero.php que:
Tenha duas vari√°veis: $a e $b, com dois valores diferentes.
Verifique qual n√∫mero √© maior.
Exiba a mensagem:
"O maior n√∫mero √© X"
Ou diga "Os n√∫meros s√£o iguais" caso tenham o mesmo valor (testa tamb√©m esse caso!).

Code:
<?php

$a = 5;
$b = 5;

if($a > $b) {
	echo "O n√∫mero $a √© maior que $b\n";
} elseif($a < $b){
	echo "O n√∫mero $b √© maior que $a\n";
} else{
	echo "Os n√∫mero s√£o iguais\n";
}

?>

Sa√≠da:
Os n√∫mero s√£o iguais

‚úÖ Mini-desafio 5 ‚Äì Valida√ß√£o de acesso
Crie um script chamado acesso.php que:
Tenha duas vari√°veis:
$usuario = "flavia"
$senha = "1234"
Simule uma tentativa de login com:
$usuarioDigitado = "flavia"
$senhaDigitada = "1234"
Se os dados digitados forem iguais aos corretos, exiba:
"Acesso permitido!"
Caso contr√°rio:
"Acesso negado!"
üß† Dica: Aqui voc√™ pode usar && para validar as duas condi√ß√µes juntas.

Code:
<?php
$usuario = readline("Digite seu usu√°rio: ");
$senha = readline("Digite sua senha: ");

if ($usuario == "flaviasouza" && $senha == "Husky@123"){
	echo "Login Aprovado\n";
} else
	echo "Login Negado\n";
?>

Sa√≠da1:
Digite sua senha: Husky@123
Login Aprovado

Sa√≠da2:
Digite seu usu√°rio: flavia
Digite sua senha: 123
Login Negado


Observa√ß√µes:
- No terminal utilizamos readline quando queremos que usu√°rio escreva algo, mais para WEB o processo √© diferente, usando $_POST ou $_GET 
com formul√°rios HTML. Mas como aqui √© terminal, readline() resolve lindamente!
- O mesmo vale para \n , s√≥ utilizei porque meus testes est√£o via terminal, para WEB utilizasse <br>


‚úÖ Mini-desafio EXTRA ‚Äì Verifica√ß√£o de notas
Crie um script chamado verifica_nota.php que:
Tenha uma vari√°vel $nota, com valor entre 0 e 10.
Verifique a situa√ß√£o do aluno conforme as regras:
Se a nota for maior ou igual a 7, diga: "Aprovado!"
Se for entre 5 e 6.9, diga: "Recupera√ß√£o!"
Se for menor que 5, diga: "Reprovado!"
üß† Dica: Voc√™ pode testar com diferentes valores como:

Code:
<?php
$nota = readline ("Digite sua nota de 0 a 10: ");

if ($nota >= 7){
	echo "Voc√™ foi APROVADO, divirta-se nas f√©rias!\n";
} elseif($nota >= 5 && $nota <= 6.9){
	echo "F√©rias? N√£o, RECUPERA√á√ÉO, estude mais ano que vem!\n";
} else {
	echo "Xii, algu√©m vai ter que voltar pra minha sala, REPROVADO!!\n";
}

?>

Sa√≠da1:
Digite sua nota de 0 a 10: 5
F√©rias? N√£o, RECUPERA√á√ÉO, estude mais ano que vem!

Sa√≠da2:
Digite sua nota de 0 a 10: 10
Voc√™ foi APROVADO, divirta-se nas f√©rias!

Sa√≠da3:
Digite sua nota de 0 a 10: 4.9
Xii, algu√©m vai ter que voltar pra minha sala, REPROVADO!!

# J√° passamos por isso mais vale refor√ßar!!
- \n √© usado apenas para o terminal caso queria na WEB use <br>
- Funciona da mesma forma para o readline(), caso queira na WEB use $_POST ou $_GET 
- N√£o se esque√ßa quando for comparar 2 valores $nota >= 5 && $nota <= 6.9 | precisa sempre repetir a vari√°vel, no nosso caso $nota
